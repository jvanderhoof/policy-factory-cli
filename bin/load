#!/bin/bash -e

image=policy-factory-builder:v0.0.2
password=''


function print_help {
  cat << EOF

A tool that Loads Factories.

Synopsis: bin/load [command options] <path-to-factory>

Usage: bin/load [options] <path-to-factory>:

    --all <default or custom>   Loads all default or custom factories

    --insecure                  Connects to Conjur using an insecure connection (does not check
                                for TLS and valid CA certificate)

    -h, --help                  Shows this help message.

EOF
  exit
}


run() {
  # Only build if the image isn't present locally
  if [[ "$(docker images -q $image 2> /dev/null)" == "" ]]; then
    docker build -t $image .
  fi
  docker run \
    --network host \
    --volume "$PWD:/opt/app/" \
    --env PASSWORD=$password \
    --env API_KEY=$API_KEY \
    --env CONJUR_AUTH_TOKEN=$CONJUR_AUTH_TOKEN \
    --env CONJUR_URL=$CONJUR_URL \
    --env USERNAME=$CONJUR_USERNAME \
    --env ACCOUNT=$ACCOUNT \
    --env TEMPLATE_FOLDER=$TEMPLATE_FOLDER \
    --env TARGET_POLICY=$TARGET_POLICY \
    --env LOAD_ALL=$LOAD_ALL \
    --env FACTORY=$FACTORY \
    --env INSECURE=$INSECURE \
    --rm \
    --tty \
    --interactive \
    $image rake policy_factory:load
}

verify_required_variables_present() {
  if [[ -z "$CONJUR_USERNAME" ]]; then
    echo "The environment variable 'CONJUR_USERNAME' must be set to the Conjur user's username." 1>&2
    exit 1
  fi

  if [[ -z "$ACCOUNT" ]]; then
    echo "The environment variable 'ACCOUNT' must be set to the Conjur account." 1>&2
    exit 1
  fi
  if [[ -z "$CONJUR_URL" ]]; then
    echo "The environment variable 'CONJUR_URL' must be set to the Conjur URL." 1>&2
    exit 1
  fi
}

main() {
  # Verify we have the environment variables we need
  verify_required_variables_present

  echo "$API_KEY - $CONJUR_AUTH_TOKEN"

  # Request password from user if API key is not present
  if [[ -z "$API_KEY" && -z "$CONJUR_AUTH_TOKEN" ]]; then
    echo -n "Conjur '$CONJUR_USERNAME' Password: "
    read -sr password
    echo
  fi

  # Call the command
  run

  echo
  echo 'Factories have been loaded successfully'
}

TARGET_POLICY="${TARGET_POLICY:-conjur/factories}"
TEMPLATE_FOLDER="custom"
LOAD_ALL="false"
INSECURE="false"
FACTORY=""

while true ; do
  case "$1" in
    -h | --help ) print_help ;;
    --all ) shift ; TEMPLATE_FOLDER=$1; LOAD_ALL="true" ; shift ;;
    --insecure ) INSECURE="true" ; shift ;;
    * ) FACTORY="$1" ; break ;;
  esac
done

if [[ "$TEMPLATE_FOLDER" != "default" && "$TEMPLATE_FOLDER" != "custom" ]]; then
  echo "$TEMPLATE_FOLDER is not a valid option for the --all flag.  Must be one of: 'custom', or 'default'"
  exit 1
fi

main
